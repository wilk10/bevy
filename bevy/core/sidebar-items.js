initSidebarItems({"derive":[["Pod","Derive the `Pod` trait for a struct"],["Zeroable","Derive the `Zeroable` trait for a struct"]],"enum":[["CoreSystem","A `SystemLabel` enum for ordering systems relative to core Bevy systems."]],"fn":[["bytes_of","Re-interprets `&T` as `&[u8]`."],["cast_slice","Cast `&[A]` into `&[B]`."]],"mod":[["prelude","The Bevy Core Prelude."]],"struct":[["CorePlugin","Adds core functionality to Apps."],["DefaultTaskPoolOptions","Helper for configuring and creating the default task pools. For end-users who want full control, insert the default task pools into the resource map manually. If the pools are already inserted, this helper will do nothing."],["FixedTimestep","A system run criteria that enables systems or stages to run at a fixed timestep between executions."],["FixedTimestepState","The internal state of each [`FixedTimestep`]."],["FixedTimesteps","A global resource that tracks the individual [`FixedTimestepState`]s for every labeled [`FixedTimestep`]."],["FloatOrd","A wrapper type that enables ordering floats. This is a work around for the famous “rust float ordering” problem. By using it, you acknowledge that sorting NaN is undefined according to spec. This implementation treats NaN as the “smallest” float."],["Name","Component used to identify an entity. Stores a hash for faster comparisons The hash is eagerly re-computed upon each update to the name."],["Stopwatch","A Stopwatch is a struct that track elapsed time when started."],["TaskPoolThreadAssignmentPolicy","Defines a simple way to determine how many threads to use given the number of remaining cores and number of total cores"],["Time","Tracks elapsed time since the last update and since the App has started"],["Timer","Tracks elapsed time. Enters the finished state once `duration` is reached."]],"trait":[["Pod","Marker trait for “plain old data”."],["Zeroable","Trait for types that can be safely created with `zeroed`."]]});